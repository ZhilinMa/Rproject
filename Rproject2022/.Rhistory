> install.packages("swirl")
> install.packages("swirl")
install.packages("swirl")
library("swirl")
swirl()
5+7
x<-5+7
z
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1, 2, 3, 4)+c(0.10)
c(1,2,3,4) + c(0, 10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
`:`
?`:`
seq(1, 20)
seq(0,10,by=0.5)
my_seq<-seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2) times=10)
rep(c(0,1,2), times=10)
rep(c(0, 1, 2) each=10)
rep(c(0, 1, 2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect<1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "AW")
my_name <- c(my_char, "AW")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X", "Y", "Z"), sep= "")
paste(LETTERS, 1:4, sep = "-")
read.csv(temp_test_file.csv)
read.csv(temp_test_file.csv)
rm(list = ls())
setwd("~/Desktop/biocomputing/git_exercises/Rproject/Rproject2022")
#first:
#setwd("~/Desktop/biocomputing/git_exercises/Rproject/Rproject2022")
#install.packages("ggplot2")
#library(ggplot2)
#apologies if this is way too many comments but hey the instructions said to
#comment I'm gonna comment haha
#load the supporting functions so they can be used
source('supportingFunctions.R')
#you can also run supportingFunctions.R in R to load the functions if you want
#first, convert any txt screens to csv's with:
#convert_txt_to_csv()
#then read in the data from both countries to one data frame and csv file
#the instructions for regulating handling of NA's are given in the
#supportingFunctions script, in this case I have used the option to remove rows
#with NA's so that if they were present they would be removed and not cause
#later errors in data analysis, but it doesn't really matter ofc this time since
#there are no NA's present in the data set
compile_data(1)
#I will then read in the compiled data from the allDataFromR.csv as a data frame
#here, rather than having each subsequent function have to repeat that process
allDat <- as.data.frame(read.csv("allDataFromR.csv",header = TRUE))
#Having gathered all the data in one file, I will isolate the positive patients
#from that file for further analysis
get_positives()
#I will load that positivesR.csv in here as a data frame rather than having
#any subsequent functions repeat it
positives <- as.data.frame(read.csv("positivesR.csv", header = TRUE))
#I will graph the cases/day for each country to determine where the illness
#originated using another function I made in supportingFunctions.R
graph.cases.by.country()
